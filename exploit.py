#!/usr/bin/python3

import os
import sys
import webbrowser
import time
import shutil


home_path = ''
user_ = ''

data_info = {}
directory_target = ''


def return_status_system():
    pass


#print(os.environ.get('JAVA'))
#print(webbrowser.get('firefox'))
#webbrowser.open_new_tab("http://www.recursospython.com/")



def path_user ():

    global home_path, user_, data_info
    home_path = os.environ['HOME']
    user_ = os.environ['USER']

    data_info['directorio'] = home_path
    data_info['usuario'] = user_

    return None
path_user()



def create_directory():
    

    global directory_name
    directory_name = 'malware_dir'
    #global directory_target = ''
    if os.path.isdir(data_info['directorio']+'/Escritorio/'+directory_name):
        shutil.rmtree(data_info['directorio']+'/Escritorio/'+directory_name)
        print('[*] Directorio existe.')
        time.sleep(1)
        
        print('[*] Removiendo directorio.')
        time.sleep(1)
        print('[*] Creando directorio.')
        time.sleep(1)
        os.mkdir(data_info['directorio']+'/Escritorio/'+directory_name)
        print('[*] Directorio creado.')

    else:
        print("[*] Directorio no existe.")
        print("[*] Creando directorio.")

        time.sleep(1)
        
        os.mkdir(data_info['directorio']+'/Escritorio/'+directory_name)
        
        time.sleep(1)

        print('[*] Directorio creado.')
        
        print(os.listdir(data_info['directorio']+'/Escritorio'))

        #directory_target = data_info['directorio']+'/Escritorio/'+directory_name
        
        return
    
create_directory()





def _instructions():
    global directory_target
    directory_target = data_info['directorio']+'/Escritorio/'+directory_name
    text_instructions = """Estás son instrucciones de prueba para la creación de instrucciones en un caso de crear un malware
                        Estás son instrucciones
                        """
    
    with open(directory_target+'/instruction.txt', 'w') as f:
        f.write(text_instructions)
        f.close()



    #print(text_instructions)
    #print(type(text_instructions))


_instructions()























